{
  "users": [
    {
      "email": "admin@gmail.com",
      "password": "$2a$10$DdmVPW5QNAe1AQPnGuqpW.TWtITQuEsnnZc9zR2Zr6ayfwONZajBS",
      "name": "Admin",
      "role": "admin",
      "id": 1
    },
    {
      "email": "mizanur@gmail.com",
      "password": "$2a$10$AvGGdcjrZq7uJCKw5Wxu/.FzcO5c.Kvo19T9ZPIvVWhpIU54WjI/e",
      "name": "Mizanur Rahaman",
      "role": "student",
      "id": 2
    },
    {
      "email": "mizanur10@gmail.com",
      "password": "$2a$10$hLyg2wSkOsH8Vvj5Q7nseO8JlPlL0sulQctBq8eLPB/rUROU/KeJe",
      "name": "Mizanur Rahaman",
      "role": "student",
      "id": 3
    }
  ],
  "videos": [
    {
      "title": "How to Build a Responsive Navigation Menu with CSS and JavaScript",
      "description": "Creating a responsive website involves designing and coding a site that adapts seamlessly to various screen sizes and devices. Begin by planning a flexible layout using CSS Grid or Flexbox, allowing content to rearrange intelligently. Utilize media queries to set breakpoints where design changes are triggered, ensuring optimal presentation on different devices. Optimize images for different resolutions and load times. Implement relative units for fonts and dimensions to maintain proportional elements. Test the website across devices and browsers to ensure consistent functionality and aesthetics. The goal is to provide users with an optimal experience regardless of the device they're using, enhancing accessibility and engagement.",
      "url": "https://www.youtube.com/embed/8QKOaTYvYUA",
      "duration": "12:30",
      "views": "22.5K",
      "createdAt": "2023-04-07T18:33:31.982Z",
      "id": 3,
      "thumbnail": "https://i3.ytimg.com/vi/8QKOaTYvYUA/maxresdefault.jpg",
      "author": "Michael Johnson",
      "authorImage": "https://yt3.ggpht.com/ytc/AOPolaQ2iMmw9cWFFjnwa13nBwtZQbl-AqGYkkiTqNaTLg=s88-c-k-c0x00ffffff-no-rj"
    },
    {
      "title": "Introduction to React.js - Building User Interfaces",
      "description": "Creating a responsive website involves a meticulous interplay of design and development strategies to ensure an optimal viewing experience across a wide spectrum of devices. By leveraging fluid grids, flexible layouts, and media queries, the design intelligently adapts to varying screen sizes, enhancing usability. Adopting a mobile-first approach prioritizes essential content for smaller screens and progressively enriches the experience as the viewport expands. Thoughtful considerations like fluid typography, touch-friendly navigation, and optimized images further contribute to seamless interactivity. Regular testing across devices and browsers guarantees consistent performance, making responsive design a cornerstone of modern web development that caters to the diverse habits of today's users.",
      "url": "https://www.youtube.com/embed/XxVg_s8xAms",
      "duration": "15:45",
      "views": "128.7K",
      "createdAt": "2023-09-01T10:20:00.000Z",
      "id": 4,
      "thumbnail": "https://i.ytimg.com/vi/Y6aYx_KKM7A/hq720.jpg?sqp=-oaymwEcCNAFEJQDSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&rs=AOn4CLDZdGhmpg3F2WVHgOr418cVRLmxfw",
      "author": "Emily Davis",
      "authorImage": "https://yt3.ggpht.com/ytc/AOPolaQ2iMmw9cWFFjnwa13nBwtZQbl-AqGYkkiTqNaTLg=s88-c-k-c0x00ffffff-no-rj"
    },
    {
      "title": "Async JavaScript: Promises and Async/Await Explained",
      "description": "Creating a responsive website involves a meticulous interplay of design and development strategies to ensure an optimal viewing experience across a wide spectrum of devices. By leveraging fluid grids, flexible layouts, and media queries, the design intelligently adapts to varying screen sizes, enhancing usability. Adopting a mobile-first approach prioritizes essential content for smaller screens and progressively enriches the experience as the viewport expands. Thoughtful considerations like fluid typography, touch-friendly navigation, and optimized images further contribute to seamless interactivity. Regular testing across devices and browsers guarantees consistent performance, making responsive design a cornerstone of modern web development that caters to the diverse habits of today's users.",
      "url": "https://www.youtube.com/embed/F_1vXT9sTgg",
      "duration": "20:10",
      "views": "95.3K",
      "createdAt": "2023-09-02T14:30:00.000Z",
      "id": 5,
      "thumbnail": "https://i.ytimg.com/an_webp/-uleG_Vecis/mqdefault_6s.webp?du=3000&sqp=CNy4tqcG&rs=AOn4CLCmfIvKWlAR4yOP79vlbCR1vnM57g",
      "author": "David Williams",
      "authorImage": "https://yt3.ggpht.com/ytc/AOPolaQ2iMmw9cWFFjnwa13nBwtZQbl-AqGYkkiTqNaTLg=s88-c-k-c0x00ffffff-no-rj"
    },
    {
      "title": "Building a RESTful API with Node.js and Express",
      "description": "Creating a responsive website involves a meticulous interplay of design and development strategies to ensure an optimal viewing experience across a wide spectrum of devices. By leveraging fluid grids, flexible layouts, and media queries, the design intelligently adapts to varying screen sizes, enhancing usability. Adopting a mobile-first approach prioritizes essential content for smaller screens and progressively enriches the experience as the viewport expands. Thoughtful considerations like fluid typography, touch-friendly navigation, and optimized images further contribute to seamless interactivity. Regular testing across devices and browsers guarantees consistent performance, making responsive design a cornerstone of modern web development that caters to the diverse habits of today's users.",
      "url": "https://www.youtube.com/watch?v=XGa4onZP66Q&pp=ygUDYXBp",
      "duration": "18:55",
      "views": "72.8K",
      "createdAt": "2023-09-03T09:15:00.000Z",
      "id": 6,
      "thumbnail": "https://i.ytimg.com/an_webp/ShcR4Zfc6Dw/mqdefault_6s.webp?du=3000&sqp=COintqcG&rs=AOn4CLCrCUmM7qlRYdZE8RSK5KVkRXydTw",
      "author": "Sarah Martinez",
      "authorImage": "https://yt3.ggpht.com/ytc/AOPolaQ2iMmw9cWFFjnwa13nBwtZQbl-AqGYkkiTqNaTLg=s88-c-k-c0x00ffffff-no-rj"
    },
    {
      "title": "Debounce Function in JavaScript - JavaScript Job Interview question",
      "description": "Creating a responsive website involves a meticulous interplay of design and development strategies to ensure an optimal viewing experience across a wide spectrum of devices. By leveraging fluid grids, flexible layouts, and media queries, the design intelligently adapts to varying screen sizes, enhancing usability. Adopting a mobile-first approach prioritizes essential content for smaller screens and progressively enriches the experience as the viewport expands. Thoughtful considerations like fluid typography, touch-friendly navigation, and optimized images further contribute to seamless interactivity. Regular testing across devices and browsers guarantees consistent performance, making responsive design a cornerstone of modern web development that caters to the diverse habits of today's users.",
      "url": "https://www.youtube.com/embed/dD9O8DnIBj4",
      "duration": "5:30",
      "views": "51.2K",
      "createdAt": "2023-08-26T20:51:20.648Z",
      "id": 1,
      "thumbnail": "https://i3.ytimg.com/vi/dD9O8DnIBj4/maxresdefault.jpg",
      "author": "John Doe",
      "authorImage": "https://yt3.ggpht.com/ytc/AOPolaQ2iMmw9cWFFjnwa13nBwtZQbl-AqGYkkiTqNaTLg=s88-c-k-c0x00ffffff-no-rj"
    },
    {
      "title": "#2 JavaScript Tips and Tricks - JavaScript Job Interview Questions",
      "description": "Creating a responsive website involves a meticulous interplay of design and development strategies to ensure an optimal viewing experience across a wide spectrum of devices. By leveraging fluid grids, flexible layouts, and media queries, the design intelligently adapts to varying screen sizes, enhancing usability. Adopting a mobile-first approach prioritizes essential content for smaller screens and progressively enriches the experience as the viewport expands. Thoughtful considerations like fluid typography, touch-friendly navigation, and optimized images further contribute to seamless interactivity. Regular testing across devices and browsers guarantees consistent performance, making responsive design a cornerstone of modern web development that caters to the diverse habits of today's users.",
      "url": "https://www.youtube.com/embed/E9_R88eKcBM",
      "duration": "31:30",
      "views": "95.2K",
      "createdAt": "2023-04-07T13:40:11.377Z",
      "id": 2,
      "thumbnail": "https://i3.ytimg.com/vi/E9_R88eKcBM/maxresdefault.jpg",
      "author": "Jane Smith",
      "authorImage": "https://yt3.ggpht.com/ytc/AOPolaQ2iMmw9cWFFjnwa13nBwtZQbl-AqGYkkiTqNaTLg=s88-c-k-c0x00ffffff-no-rj"
    },
    {
      "title": "Introduction to Responsive Web Design",
      "description": "Creating a responsive website involves a meticulous interplay of design and development strategies to ensure an optimal viewing experience across a wide spectrum of devices. By leveraging fluid grids, flexible layouts, and media queries, the design intelligently adapts to varying screen sizes, enhancing usability. Adopting a mobile-first approach prioritizes essential content for smaller screens and progressively enriches the experience as the viewport expands. Thoughtful considerations like fluid typography, touch-friendly navigation, and optimized images further contribute to seamless interactivity. Regular testing across devices and browsers guarantees consistent performance, making responsive design a cornerstone of modern web development that caters to the diverse habits of today's users.",
      "url": "https://youtu.be/r5NQecwZs1A?si=dXgXHx-htdYj-XVJ",
      "duration": "14:20",
      "views": "56.4K",
      "createdAt": "2023-09-04T12:40:00.000Z",
      "id": 7,
      "thumbnail": "https://i.ytimg.com/an_webp/r5NQecwZs1A/mqdefault_6s.webp?du=3000&sqp=CICptqcG&rs=AOn4CLCuRCDBXuognFqmaX8qINwcevAfkw",
      "author": "Daniel Wilson",
      "authorImage": "https://yt3.ggpht.com/ytc/AOPolaQ2iMmw9cWFFjnwa13nBwtZQbl-AqGYkkiTqNaTLg=s88-c-k-c0x00ffffff-no-rj"
    },
    {
      "title": "CSS Flexbox: Mastering Layouts",
      "description": "Master the art of building flexible Creating a responsive website involves a meticulous interplay of design and development strategies to ensure an optimal viewing experience across a wide spectrum of devices. By leveraging fluid grids, flexible layouts, and media queries, the design intelligently adapts to varying screen sizes, enhancing usability. Adopting a mobile-first approach prioritizes essential content for smaller screens and progressively enriches the experience as the viewport expands. Thoughtful considerations like fluid typography, touch-friendly navigation, and optimized images further contribute to seamless interactivity. Regular testing across devices and browsers guarantees consistent performance, making responsive design a cornerstone of modern web development that caters to the diverse habits of today's users.",
      "url": "https://www.youtube.com/embed/Zv1m-2tXbhw",
      "duration": "22:30",
      "views": "82.1K",
      "createdAt": "2023-09-05T16:05:00.000Z",
      "id": 8,
      "thumbnail": "https://i.ytimg.com/an_webp/-uleG_Vecis/mqdefault_6s.webp?du=3000&sqp=CNy4tqcG&rs=AOn4CLCmfIvKWlAR4yOP79vlbCR1vnM57g",
      "author": "Alex Turner",
      "authorImage": "https://example.com/authors/alex_turner.jpg"
    },
    {
      "title": "JavaScript ES6: Arrow Functions and Destructuring",
      "description": "Explore modern JavaScript features like arrow functions and destructuring for concise and efficient code.Creating a responsive website involves a meticulous interplay of design and development strategies to ensure an optimal viewing experience across a wide spectrum of devices. By leveraging fluid grids, flexible layouts, and media queries, the design intelligently adapts to varying screen sizes, enhancing usability. Adopting a mobile-first approach prioritizes essential content for smaller screens and progressively enriches the experience as the viewport expands. Thoughtful considerations like fluid typography, touch-friendly navigation, and optimized images further contribute to seamless interactivity. Regular testing across devices and browsers guarantees consistent performance, making responsive design a cornerstone of modern web development that caters to the diverse habits of today's users.",
      "url": "https://www.youtube.com/watch?v=trCfAGpef5w&pp=ygUKd2ViIGRlc2lnbg%3D%3D",
      "duration": "12:15",
      "views": "44.9K",
      "createdAt": "2023-09-06T19:30:00.000Z",
      "id": 9,
      "thumbnail": "https://i.ytimg.com/an_webp/X8ipUgXH6jw/mqdefault_6s.webp?du=3000&sqp=CKCytqcG&rs=AOn4CLBPBpBzX2nTVQ5-nOeOLbRBYyxHLA",
      "author": "Sophia Adams",
      "authorImage": "https://example.com/authors/sophia_adams.jpg"
    },
    {
      "title": "Getting Started with Vue.js - Build Interactive Web Apps",
      "description": "Begin your journey with Creating a responsive website involves a meticulous interplay of design and development strategies to ensure an optimal viewing experience across a wide spectrum of devices. By leveraging fluid grids, flexible layouts, and media queries, the design intelligently adapts to varying screen sizes, enhancing usability. Adopting a mobile-first approach prioritizes essential content for smaller screens and progressively enriches the experience as the viewport expands. Thoughtful considerations like fluid typography, touch-friendly navigation, and optimized images further contribute to seamless interactivity. Regular testing across devices and browsers guarantees consistent performance, making responsive design a cornerstone of modern web development that caters to the diverse habits of today's users. Vue.js and learn how to build interactive web applications with ease...",
      "url": "https://youtu.be/1GNsWa_EZdw?si=zaVUqUpRJTrI-Jtp",
      "duration": "17:50",
      "views": "61.7K",
      "createdAt": "2023-08-26T22:46:57.731Z",
      "id": 10,
      "thumbnail": "https://i3.ytimg.com/vi/1GNsWa_EZdw/maxresdefault.jpg",
      "author": "Oliver Green",
      "authorImage": "https://example.com/authors/oliver_green.jpg"
    },
    {
      "title": "Introduction to Python Programming",
      "description": "Discover the basics Creating a responsive website involves a meticulous interplay of design and development strategies to ensure an optimal viewing experience across a wide spectrum of devices. By leveraging fluid grids, flexible layouts, and media queries, the design intelligently adapts to varying screen sizes, enhancing usability. Adopting a mobile-first approach prioritizes essential content for smaller screens and progressively enriches the experience as the viewport expands. Thoughtful considerations like fluid typography, touch-friendly navigation, and optimized images further contribute to seamless interactivity. Regular testing across devices and browsers guarantees consistent performance, making responsive design a cornerstone of modern web development that caters to the diverse habits of today's users. of Python programming and start your programming journey with a versatile language...",
      "url": "https://www.youtube.com/watch?v=bBC-nXj3Ng4",
      "duration": "19:25",
      "views": "38.2K",
      "createdAt": "2023-09-08T08:05:00.000Z",
      "id": 11,
      "thumbnail": "https://i.ytimg.com/an_webp/bBC-nXj3Ng4/mqdefault_6s.webp?du=3000&sqp=CKqktqcG&rs=AOn4CLD6dvnPftgEZGRZRvz4bmn3tRU_ZQ",
      "author": "William Johnson",
      "authorImage": "https://example.com/authors/william_johnson.jpg"
    },
    {
      "title": "Using Git and GitHub: Version Control Made Easy",
      "description": "Learn how to effectively Creating a responsive website involves a meticulous interplay of design and development strategies to ensure an optimal viewing experience across a wide spectrum of devices. By leveraging fluid grids, flexible layouts, and media queries, the design intelligently adapts to varying screen sizes, enhancing usability. Adopting a mobile-first approach prioritizes essential content for smaller screens and progressively enriches the experience as the viewport expands. Thoughtful considerations like fluid typography, touch-friendly navigation, and optimized images further contribute to seamless interactivity. Regular testing across devices and browsers guarantees consistent performance, making responsive design a cornerstone of modern web development that caters to the diverse habits of today's users. use Git and GitHub for version control and collaborative software development...",
      "url": "https://www.youtube.com/embed/uUuTYDg9XoI",
      "duration": "16:40",
      "views": "49.6K",
      "createdAt": "2023-09-09T14:20:00.000Z",
      "id": 12,
      "thumbnail": "https://i3.ytimg.com/vi/uUuTYDg9XoI/maxresdefault.jpg",
      "author": "Ava White",
      "authorImage": "https://example.com/authors/ava_white.jpg"
    },
    {
      "title": "Building a Simple To-Do App with React Native",
      "description": "Create a simple to-do app using React Native and build Creating a responsive website involves a meticulous interplay of design and development strategies to ensure an optimal viewing experience across a wide spectrum of devices. By leveraging fluid grids, flexible layouts, and media queries, the design intelligently adapts to varying screen sizes, enhancing usability. Adopting a mobile-first approach prioritizes essential content for smaller screens and progressively enriches the experience as the viewport expands. Thoughtful considerations like fluid typography, touch-friendly navigation, and optimized images further contribute to seamless interactivity. Regular testing across devices and browsers guarantees consistent performance, making responsive design a cornerstone of modern web development that caters to the diverse habits of today's users. cross-platform mobile applications...",
      "url": "https://www.youtube.com/embed/0-S5a0eXPoc",
      "duration": "14:50",
      "views": "29.8K",
      "createdAt": "2023-09-10T18:00:00.000Z",
      "id": 13,
      "thumbnail": "https://i3.ytimg.com/vi/0-S5a0eXPoc/maxresdefault.jpg",
      "author": "Noah Taylor",
      "authorImage": "https://example.com/authors/noah_taylor.jpg"
    }
  ],
  "assignments": [
    {
      "title": "create landing page",
      "totalMark": "100",
      "video_id": 3,
      "video_title": "How to Build a Responsive Navigation Menu with CSS and JavaScript",
      "id": 1
    },
    {
      "title": "faaa",
      "totalMark": "100",
      "video_id": 3,
      "video_title": "How to Build a Responsive Navigation Menu with CSS and JavaScript",
      "id": 2
    },
    {
      "title": "asf",
      "totalMark": "asdfdsf",
      "video_id": 3,
      "video_title": "How to Build a Responsive Navigation Menu with CSS and JavaScript",
      "id": 3
    },
    {
      "title": "Build a React Component",
      "description": "For this assignment, you will build a simple React component that displays user information. Use the concepts learned in the 'Introduction to React.js' video to create a reusable and interactive component.",
      "totalMark": 100,
      "video_id": 4,
      "video_title": "Introduction to React.js - Building User Interfaces",
      "id": 4
    },
    {
      "title": "Asynchronous Programming Exercise",
      "description": "Apply your knowledge of asynchronous programming by solving a set of coding challenges using Promises and async/await. Follow the instructions given in the 'Async JavaScript: Promises and Async/Await Explained' video.",
      "totalMark": 120,
      "video_id": 5,
      "video_title": "Async JavaScript: Promises and Async/Await Explained",
      "id": 5
    },
    {
      "title": "RESTful API Implementation",
      "description": "In this assignment, you will implement a RESTful API using Node.js and Express. Create endpoints for data manipulation and retrieval based on the concepts covered in the 'Building a RESTful API with Node.js and Express' video.",
      "totalMark": 150,
      "video_id": 6,
      "video_title": "Building a RESTful API with Node.js and Express",
      "id": 6
    },
    {
      "title": "Responsive Web Design Project",
      "description": "Design and develop a responsive webpage that adapts to various screen sizes. Apply the principles discussed in the 'Introduction to Responsive Web Design' video to create an engaging and user-friendly layout.",
      "totalMark": 110,
      "video_id": 7,
      "video_title": "Introduction to Responsive Web Design",
      "id": 7
    },
    {
      "title": "Flexbox Layout Challenge",
      "description": "Create a modern website layout using CSS Flexbox techniques. Implement a flexible and responsive design following the guidelines from the 'CSS Flexbox: Mastering Layouts' video.",
      "totalMark": 130,
      "video_id": 8,
      "video_title": "CSS Flexbox: Mastering Layouts",
      "id": 8
    },
    {
      "title": "Refactor JavaScript Code",
      "description": "Review a given piece of JavaScript code and refactor it using arrow functions and destructuring. Apply the modern JavaScript features demonstrated in the 'JavaScript ES6: Arrow Functions and Destructuring' video.",
      "totalMark": 90,
      "video_id": 9,
      "video_title": "JavaScript ES6: Arrow Functions and Destructuring",
      "id": 9
    },
    {
      "title": "Vue.js Interactive Web App",
      "description": "Build an interactive web application using Vue.js. Follow the instructions from the 'Getting Started with Vue.js - Build Interactive Web Apps' video to create dynamic and responsive user interfaces.",
      "totalMark": 140,
      "video_id": 10,
      "video_title": "Getting Started with Vue.js - Build Interactive Web Apps",
      "id": 10
    },
    {
      "title": "Python Basics Project",
      "description": "Implement a simple Python program that demonstrates your understanding of basic programming concepts. Apply the fundamental principles introduced in the 'Introduction to Python Programming' video.",
      "totalMark": 100,
      "video_id": 11,
      "video_title": "Introduction to Python Programming",
      "id": 11
    },
    {
      "title": "Git Version Control Exercise",
      "description": "Practice using Git and GitHub for version control in a collaborative coding scenario. Follow the steps outlined in the 'Using Git and GitHub: Version Control Made Easy' video to complete this exercise.",
      "totalMark": 120,
      "video_id": 12,
      "video_title": "Using Git and GitHub: Version Control Made Easy",
      "id": 12
    },
    {
      "title": "React Native To-Do App",
      "description": "Develop a cross-platform to-do app using React Native. Apply your knowledge from the 'Building a Simple To-Do App with React Native' video to create a mobile application with essential features.",
      "totalMark": 110,
      "video_id": 13,
      "video_title": "Building a Simple To-Do App with React Native",
      "id": 13
    }
  ],
  "quizzes": [
    {
      "question": "Which of the following is an example of a situation where you would use the Debounce function?",
      "options": [
        {
          "id": "1",
          "option": "A search bar where the results are displayed as you type.",
          "isCorrect": false
        },
        {
          "id": "2",
          "option": "A button that performs an action when clicked.",
          "isCorrect": false
        },
        {
          "id": 3,
          "option": "An animation that plays when a user hovers over an element.",
          "isCorrect": false
        },
        {
          "id": 4,
          "option": "All of the above.",
          "isCorrect": true
        }
      ],
      "video_id": 2,
      "video_title": "#2 JavaScript Tips and Tricks - JavaScript Job Interview Questions",
      "id": 2
    },
    {
      "question": "What is correct",
      "options": [
        {
          "id": 1,
          "option": "var, const and let are same",
          "isCorrect": false
        },
        {
          "id": 2,
          "option": "undefined and null are same",
          "isCorrect": true
        },
        {
          "id": 3,
          "option": "both are correct",
          "isCorrect": false
        },
        {
          "id": 4,
          "option": "none of them are true",
          "isCorrect": false
        }
      ],
      "video_id": 1,
      "video_title": "Debounce Function in JavaScript - JavaScript Job Interview question",
      "id": 3
    },
    {
      "question": "fsd",
      "options": [
        {
          "id": 1,
          "option": "sdfdf",
          "isCorrect": false
        },
        {
          "id": 2,
          "option": "sdfsdf",
          "isCorrect": false
        },
        {
          "id": 3,
          "option": "fsdfwe",
          "isCorrect": true
        },
        {
          "id": 4,
          "option": "sdfsdf",
          "isCorrect": false
        }
      ],
      "video_id": 3,
      "video_title": "How to Build a Responsive Navigation Menu with CSS and JavaScript",
      "id": 4
    },
    {
      "question": "console.log(foo)",
      "options": [
        {
          "id": 1,
          "option": "not given",
          "isCorrect": false
        },
        {
          "id": 2,
          "option": "undefined",
          "isCorrect": false
        },
        {
          "id": 3,
          "option": "foo",
          "isCorrect": true
        },
        {
          "id": 4,
          "option": "bar",
          "isCorrect": false
        }
      ],
      "video_id": 3,
      "video_title": "How to Build a Responsive Navigation Menu with CSS and JavaScript",
      "id": 5
    },
    {
      "question": "What is JSX in React?",
      "options": [
        {
          "id": "1",
          "option": "A programming language similar to JavaScript.",
          "isCorrect": false
        },
        {
          "id": "2",
          "option": "A syntax extension for JavaScript that allows writing HTML-like code.",
          "isCorrect": true
        },
        {
          "id": "3",
          "option": "A framework for building server-side applications.",
          "isCorrect": false
        },
        {
          "id": "4",
          "option": "A tool for handling asynchronous operations.",
          "isCorrect": false
        }
      ],
      "video_id": 4,
      "video_title": "Introduction to React.js - Building User Interfaces",
      "id": 1
    },
    {
      "question": "What is the purpose of the 'ReactDOM.render()' method in React?",
      "options": [
        {
          "id": "1",
          "option": "To render the initial DOM structure of a web page.",
          "isCorrect": true
        },
        {
          "id": "2",
          "option": "To define the structure of a React component.",
          "isCorrect": false
        },
        {
          "id": "3",
          "option": "To create a virtual DOM representation of a React component.",
          "isCorrect": false
        },
        {
          "id": "4",
          "option": "To update the state of a React component.",
          "isCorrect": false
        }
      ],
      "video_id": 4,
      "video_title": "Introduction to React.js - Building User Interfaces",
      "id": 2
    },
    {
      "question": "What is the purpose of props in React components?",
      "options": [
        {
          "id": "1",
          "option": "To define internal state within a component.",
          "isCorrect": false
        },
        {
          "id": "2",
          "option": "To manage asynchronous operations.",
          "isCorrect": false
        },
        {
          "id": "3",
          "option": "To pass data from a parent component to a child component.",
          "isCorrect": true
        },
        {
          "id": "4",
          "option": "To define the structure of a CSS stylesheet.",
          "isCorrect": false
        }
      ],
      "video_id": 4,
      "video_title": "Introduction to React.js - Building User Interfaces",
      "id": 3
    },
    {
      "question": "What is the significance of the 'state' in a React component?",
      "options": [
        {
          "id": "1",
          "option": "It is used to manage external API requests.",
          "isCorrect": false
        },
        {
          "id": "2",
          "option": "It is a reserved keyword in JavaScript.",
          "isCorrect": false
        },
        {
          "id": "3",
          "option": "It represents the current data that can change over time.",
          "isCorrect": true
        },
        {
          "id": "4",
          "option": "It defines the layout and styling of a component.",
          "isCorrect": false
        }
      ],
      "video_id": 4,
      "video_title": "Introduction to React.js - Building User Interfaces",
      "id": 4
    },
    {
      "question": "What is the purpose of the 'componentDidMount()' lifecycle method in React?",
      "options": [
        {
          "id": "1",
          "option": "To create a new instance of a React component.",
          "isCorrect": false
        },
        {
          "id": "2",
          "option": "To update the state of a component.",
          "isCorrect": false
        },
        {
          "id": "3",
          "option": "To render a component on the DOM.",
          "isCorrect": false
        },
        {
          "id": "4",
          "option": "To perform actions after a component is inserted into the DOM.",
          "isCorrect": true
        }
      ],
      "video_id": 4,
      "video_title": "Introduction to React.js - Building User Interfaces",
      "id": 5
    },
    {
      "question": "What is the purpose of a Promise in JavaScript?",
      "options": [
        {
          "id": "1",
          "option": "To handle synchronous operations only.",
          "isCorrect": false
        },
        {
          "id": "2",
          "option": "To manage asynchronous operations and handle their results.",
          "isCorrect": true
        },
        {
          "id": "3",
          "option": "To replace traditional for loops in JavaScript.",
          "isCorrect": false
        },
        {
          "id": "4",
          "option": "To define classes and objects in JavaScript.",
          "isCorrect": false
        }
      ],
      "video_id": 5,
      "video_title": "Async JavaScript: Promises and Async/Await Explained",
      "id": 6
    },
    {
      "question": "What is the purpose of the 'async' keyword in JavaScript?",
      "options": [
        {
          "id": "1",
          "option": "To define a function that returns a Promise.",
          "isCorrect": true
        },
        {
          "id": "2",
          "option": "To create an anonymous function in JavaScript.",
          "isCorrect": false
        },
        {
          "id": "3",
          "option": "To mark a variable as constant and immutable.",
          "isCorrect": false
        },
        {
          "id": "4",
          "option": "To initiate a network request using AJAX.",
          "isCorrect": false
        }
      ],
      "video_id": 5,
      "video_title": "Async JavaScript: Promises and Async/Await Explained",
      "id": 7
    },
    {
      "question": "Which method is used to handle the result of a resolved Promise in JavaScript?",
      "options": [
        {
          "id": "1",
          "option": "resolve()",
          "isCorrect": false
        },
        {
          "id": "2",
          "option": "then()",
          "isCorrect": true
        },
        {
          "id": "3",
          "option": "catch()",
          "isCorrect": false
        },
        {
          "id": "4",
          "option": "await()",
          "isCorrect": false
        }
      ],
      "video_id": 5,
      "video_title": "Async JavaScript: Promises and Async/Await Explained",
      "id": 8
    },
    {
      "question": "What happens if a Promise is rejected?",
      "options": [
        {
          "id": "1",
          "option": "The JavaScript code execution pauses indefinitely.",
          "isCorrect": false
        },
        {
          "id": "2",
          "option": "The error is silently ignored.",
          "isCorrect": false
        },
        {
          "id": "3",
          "option": "The catch() method is invoked with the error.",
          "isCorrect": true
        },
        {
          "id": "4",
          "option": "The Promise resolves with a null value.",
          "isCorrect": false
        }
      ],
      "video_id": 5,
      "video_title": "Async JavaScript: Promises and Async/Await Explained",
      "id": 9
    },
    {
      "question": "What is the purpose of the 'await' keyword in async/await syntax?",
      "options": [
        {
          "id": "1",
          "option": "To create a new Promise instance.",
          "isCorrect": false
        },
        {
          "id": "2",
          "option": "To pause the execution of a function until the Promise is resolved.",
          "isCorrect": true
        },
        {
          "id": "3",
          "option": "To handle rejected Promises.",
          "isCorrect": false
        },
        {
          "id": "4",
          "option": "To execute a function asynchronously.",
          "isCorrect": false
        }
      ],
      "video_id": 5,
      "video_title": "Async JavaScript: Promises and Async/Await Explained",
      "id": 10
    },
    {
      "question": "What is the purpose of a RESTful API?",
      "options": [
        {
          "id": "1",
          "option": "To manage client-side logic in web applications.",
          "isCorrect": false
        },
        {
          "id": "2",
          "option": "To create visually appealing user interfaces.",
          "isCorrect": false
        },
        {
          "id": "3",
          "option": "To provide a standardized way for applications to communicate and exchange data.",
          "isCorrect": true
        },
        {
          "id": "4",
          "option": "To host and serve static files.",
          "isCorrect": false
        }
      ],
      "video_id": 6,
      "video_title": "Building a RESTful API with Node.js and Express",
      "id": 11
    },
    {
      "question": "Which HTTP status code is returned when a resource is successfully created using POST?",
      "options": [
        {
          "id": "1",
          "option": "200 OK",
          "isCorrect": false
        },
        {
          "id": "2",
          "option": "201 Created",
          "isCorrect": true
        },
        {
          "id": "3",
          "option": "400 Bad Request",
          "isCorrect": false
        },
        {
          "id": "4",
          "option": "404 Not Found",
          "isCorrect": false
        }
      ],
      "video_id": 6,
      "video_title": "Building a RESTful API with Node.js and Express",
      "id": 12
    },
    {
      "question": "What does 'media query' refer to in the context of responsive web design?",
      "options": [
        {
          "id": "1",
          "option": "A type of JavaScript function.",
          "isCorrect": false
        },
        {
          "id": "2",
          "option": "A CSS rule that targets specific screen sizes and devices.",
          "isCorrect": true
        },
        {
          "id": "3",
          "option": "A method for loading images asynchronously.",
          "isCorrect": false
        },
        {
          "id": "4",
          "option": "A keyword used to define variables in JavaScript.",
          "isCorrect": false
        }
      ],
      "video_id": 7,
      "video_title": "Introduction to Responsive Web Design",
      "id": 13
    },
    {
      "question": "What is the purpose of the 'viewport' meta tag in HTML?",
      "options": [
        {
          "id": "1",
          "option": "To specify the background color of a webpage.",
          "isCorrect": false
        },
        {
          "id": "2",
          "option": "To define the width and initial scale of the viewport for responsive design.",
          "isCorrect": true
        },
        {
          "id": "3",
          "option": "To include external JavaScript libraries.",
          "isCorrect": false
        },
        {
          "id": "4",
          "option": "To add multimedia content to a webpage.",
          "isCorrect": false
        }
      ],
      "video_id": 7,
      "video_title": "Introduction to Responsive Web Design",
      "id": 14
    },
    {
      "question": "What is the main advantage of using CSS Flexbox for layout?",
      "options": [
        {
          "id": "1",
          "option": "It provides animation effects for web pages.",
          "isCorrect": false
        },
        {
          "id": "2",
          "option": "It simplifies the process of creating responsive layouts.",
          "isCorrect": true
        },
        {
          "id": "3",
          "option": "It optimizes images for faster loading times.",
          "isCorrect": false
        },
        {
          "id": "4",
          "option": "It replaces JavaScript for creating interactive components.",
          "isCorrect": false
        }
      ],
      "video_id": 8,
      "video_title": "CSS Flexbox: Mastering Layouts",
      "id": 15
    },
    {
      "question": "Which property is used to align flex items along the cross-axis?",
      "options": [
        {
          "id": "1",
          "option": "justify-content",
          "isCorrect": false
        },
        {
          "id": "2",
          "option": "align-items",
          "isCorrect": true
        },
        {
          "id": "3",
          "option": "flex-direction",
          "isCorrect": false
        },
        {
          "id": "4",
          "option": "flex-wrap",
          "isCorrect": false
        }
      ],
      "video_id": 8,
      "video_title": "CSS Flexbox: Mastering Layouts",
      "id": 16
    },
    {
      "question": "What is the purpose of arrow functions in JavaScript?",
      "options": [
        {
          "id": "1",
          "option": "To declare variables using a shorter syntax.",
          "isCorrect": false
        },
        {
          "id": "2",
          "option": "To create anonymous functions with concise syntax.",
          "isCorrect": true
        },
        {
          "id": "3",
          "option": "To define complex algorithms in a single line of code.",
          "isCorrect": false
        },
        {
          "id": "4",
          "option": "To handle asynchronous operations using Promises.",
          "isCorrect": false
        }
      ],
      "video_id": 9,
      "video_title": "JavaScript ES6: Arrow Functions and Destructuring",
      "id": 17
    },
    {
      "question": "What is object destructuring in JavaScript?",
      "options": [
        {
          "id": "1",
          "option": "A way to break down a complex object into its individual properties.",
          "isCorrect": true
        },
        {
          "id": "2",
          "option": "A technique for defining global variables.",
          "isCorrect": false
        },
        {
          "id": "3",
          "option": "A process of creating objects using the 'new' keyword.",
          "isCorrect": false
        },
        {
          "id": "4",
          "option": "A method for concatenating strings.",
          "isCorrect": false
        }
      ],
      "video_id": 9,
      "video_title": "JavaScript ES6: Arrow Functions and Destructuring",
      "id": 18
    },
    {
      "question": "What is Vue.js?",
      "options": [
        {
          "id": "1",
          "option": "A programming language for backend development.",
          "isCorrect": false
        },
        {
          "id": "2",
          "option": "A front-end JavaScript framework for building user interfaces.",
          "isCorrect": true
        },
        {
          "id": "3",
          "option": "A tool for creating databases in SQL.",
          "isCorrect": false
        },
        {
          "id": "4",
          "option": "A CSS preprocessor for styling web pages.",
          "isCorrect": false
        }
      ],
      "video_id": 10,
      "video_title": "Getting Started with Vue.js - Build Interactive Web Apps",
      "id": 19
    },
    {
      "question": "What is the 'v-model' directive used for in Vue.js?",
      "options": [
        {
          "id": "1",
          "option": "To create custom directives.",
          "isCorrect": false
        },
        {
          "id": "2",
          "option": "To define variables within Vue components.",
          "isCorrect": false
        },
        {
          "id": "3",
          "option": "To establish two-way data binding between input elements and component data.",
          "isCorrect": true
        },
        {
          "id": "4",
          "option": "To import external JavaScript libraries.",
          "isCorrect": false
        }
      ],
      "video_id": 10,
      "video_title": "Getting Started with Vue.js - Build Interactive Web Apps",
      "id": 20
    },
    {
      "question": "What is Python primarily used for?",
      "options": [
        {
          "id": "1",
          "option": "Building hardware components.",
          "isCorrect": false
        },
        {
          "id": "2",
          "option": "Creating dynamic web pages.",
          "isCorrect": false
        },
        {
          "id": "3",
          "option": "Developing software applications and scripting.",
          "isCorrect": true
        },
        {
          "id": "4",
          "option": "Managing network security.",
          "isCorrect": false
        }
      ],
      "video_id": 11,
      "video_title": "Introduction to Python Programming",
      "id": 21
    },
    {
      "question": "Which of the following is a valid Python variable name?",
      "options": [
        {
          "id": "1",
          "option": "1variable",
          "isCorrect": false
        },
        {
          "id": "2",
          "option": "_myVariable",
          "isCorrect": true
        },
        {
          "id": "3",
          "option": "my variable",
          "isCorrect": false
        },
        {
          "id": "4",
          "option": "MyVariable123",
          "isCorrect": true
        }
      ],
      "video_id": 11,
      "video_title": "Introduction to Python Programming",
      "id": 22
    },
    {
      "question": "What is version control in software development?",
      "options": [
        {
          "id": "1",
          "option": "A way to secure data against unauthorized access.",
          "isCorrect": false
        },
        {
          "id": "2",
          "option": "A method for optimizing database queries.",
          "isCorrect": false
        },
        {
          "id": "3",
          "option": "A system for tracking changes to source code and managing collaborative projects.",
          "isCorrect": true
        },
        {
          "id": "4",
          "option": "A process of creating backups for critical files.",
          "isCorrect": false
        }
      ],
      "video_id": 12,
      "video_title": "Using Git and GitHub: Version Control Made Easy",
      "id": 23
    }
  ],
  "assignmentMark": [
    {
      "assignment_id": 1,
      "title": "create landing page",
      "student_name": "Mizanur Rahaman",
      "student_id": 2,
      "totalMark": 100,
      "mark": 0,
      "repo_link": "test repo 2",
      "live_link": "fdfsfd",
      "status": "pending",
      "id": 1
    }
  ],
  "quizMark": []
}
